name: Run macrobenchmark
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '5 0 * * 1-5'
  workflow_dispatch:
jobs:
  macrobenchmark:
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    name: Run macrobenchmark
    runs-on: "android"
    steps:
      - name: Install dependencies
        run: "sudo apt-get install -y libfreetype6 fontconfig fonts-dejavu"
      - name: Globally enable build cache and parallel execution
        run: "echo -e 'org.gradle.caching=true\norg.gradle.parallel=true' >> ~/.gradle/gradle.properties"
      - name: Force all tasks to be rerun when debug mode is on
        # This allows us to force rerun the build if cache has gotten corrupted
        run: 'if [[ "${{ runner.debug }}" == "1" ]]; then
                  echo "GLOBAL_FLAGS= --rerun-tasks" >> "$GITHUB_ENV";
              else
                  echo "GLOBAL_FLAGS=" >> "$GITHUB_ENV";
              fi
            '
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Save Service account'
        run: 'echo "${{ secrets.TEST_GCLOUD_ACCOUNT }}" | base64 -d > test-lab-key.json'

      - uses: inovait/actions-common/android-setup@8a61659d84a42065263d1619d1f22f045fb7207e
        with:
          java_version: '17'
      - name: "Set gcloud project"
        run: |
          gcloud auth login --cred-file=test-lab-key.json
          gcloud config set project android-architecture-playground
      #
      - name: "Build app"
        run: "./gradlew :app:assembleDevelopBenchmark $GLOBAL_FLAGS"
      - name: "Clear previous results from the cloud"
        run: |
          gsutil rm -r "gs://firebase-test-results-android-architecture-playground/*" || true
      - name: "Build benchmark"
        run: "./gradlew :app-benchmark:assembleDevelopBenchmark"
      - name: "Run benchmarks on Firebase test lab"
        run: |
          gcloud firebase test android run \
          --type instrumentation \
          --app app/build/outputs/apk/develop/benchmark/app-develop-benchmark.apk \
          --test app-benchmark/build/outputs/apk/develop/benchmark/app-benchmark-develop-benchmark.apk \
          --device model=a10,version=29,locale=en,orientation=portrait \
          --directories-to-pull /sdcard/Download \
          --environment-variables additionalTestOutputDir=/sdcard/Download,no-isolated-storage=true \
          --results-bucket=gs://firebase-test-results-android-architecture-playground \
          --results-dir=results \
          --timeout 20m
      - name: "Copy results from cloud to local machine"
        run: |
          gsutil cp -r gs://firebase-test-results-android-architecture-playground/results app-benchmark/
      - name: "Publish numbers to Cloud Monitoring"
        run: "./gradlew benchmarkResultsUpload"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: "test-lab-key.json"
